services:
  project_api:
    container_name: project_api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080" 
    environment:
      - ASPNETCORE_URLS=http://+:8080 
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__default=Host=postgres;Username=postgres;Password=123;Database=db;Port=5432;
      - ElasticSettings__Url=http://elasticsearch:9200
    depends_on:
      - postgres
    networks:
      - backend
      - elk

  postgres:
    image: postgres:latest
    container_name: postgres_database
    volumes:
      - database_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    networks:
      - backend
  
  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    environment:
      - PGADMIN_DEFAULT_EMAIL=anderson64217@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=1234
    ports:
      - "105:80"
    networks:
      - backend

  elasticsearch:
    container_name: elastic
    image: elasticsearch:8.15.0
    ports:
      - "9200:9200"
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks:
      - elk

  kibana:
    container_name: kibana    
    image: kibana:8.15.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - elk

networks:
  backend:
    driver: bridge
  elk:
    driver: bridge 
  
volumes:
  database_data:
  elastic-data: