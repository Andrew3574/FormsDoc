@using FormsAPP.Helpers
@using FormsAPP.Models.Users
@model IEnumerable<UserModel>
@{
    ViewData["Title"] = "Index";
}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<style>
    .toolbar {
        display: flex;
        align-items: center;
        max-width:1200px;
        min-width:460px;
        padding: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .toolButtons {
        display: flex;
        gap: 10px;
    }

    .toolButton {
        overflow:hidden;
        max-height:55px;
        max-width:110px;
        padding: 8px 15px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        border: 2px solid transparent;
    }


    .toolButton:hover {
        opacity: 0.8;
    }

    .filterInputContainer {
        margin-left: auto;
        display: flex;
        align-items: center;
    }

    .filterButton {
        margin-left: 10px;
        padding: 5px;
        border-radius: 5px;
        border-width: 1px;
        font-size: 16px;
    }
</style>

<form method="post" asp-action="Filter">
    <div class="toolbar">
        <div class="toolButtons">
            <button class="toolButton btn-warning" type="submit" asp-action="PromoteUser">
                <i class="fa fa-angle-double-up"> Promote</i>
            </button>
            <button class="toolButton btn-warning" type="submit" asp-action="DemoteUser">
                <i class="fa fa-angle-double-down"> Demote</i>
            </button>
            <button class="toolButton btn-primary" type="submit" asp-action="Block">
                <i class="fa fa-lock"></i>
                Block
            </button>
            <button class="toolButton btn-primary" type="submit" asp-action="UnBlock">
                <i class="fa fa-unlock"></i>
            </button>
            <button class="toolButton btn-danger" type="submit" asp-action="Delete">
                <i class="fa fa-trash"></i>
            </button>
        </div>
        <div class="filterInputContainer">
            <input class="filterButton" name="filterEmail" type="text" placeholder="Filter" />
            <button style="padding:7px 12px" class="filterButton" type="submit" value="Filter" asp-action="Filter">
                <i class="fa fa-search"></i>
            </button>
        </div>
    </div>
    <table class="table table-hover">
        <thead>
            <tr>
                <th></th>
                <th>@Html.DisplayNameFor(model => model.Name)</th>
                <th>@Html.DisplayNameFor(model => model.Email)</th>
                <th>Last seen</th>
            </tr>
        </thead>
        <tbody id="usersTableBody">
            @foreach (var item in Model)
            {
                <tr onclick="toggleCheckbox(this)">
                    <td>
                        <input type="checkbox" name="selectedUserIndexes" value="@item.Id" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Surname), @Html.DisplayFor(modelItem => item.Name)<br />
                        state: @Html.DisplayFor(modelItem => item.State) | role: @Html.DisplayFor(modelItem => item.Role)
                    </td>
                    <td>
                        <a class="link-primary" asp-action="UserProfileByUserId" asp-controller="Account" asp-route-userId="@item.Id">@Html.DisplayFor(modelItem => item.Email)</a>
                    </td>
                    <td title="@DateTime.Parse(item.Lastlogin).ToString("f")">
                        @Html.LastLoginTime(DateTime.Parse(item.Lastlogin))
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div style="display:none" id="loading">
        <i class="fa fa-spinner fa-spin"></i> Loading...
    </div>
</form>

<script>
    let isLoading = false; 
    let hasData = true;
    let batch = 1;
    window.addEventListener('scroll', async () => {
            if (isLoading || !hasData) return;

            if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 200) {
                isLoading = true;
                document.getElementById('loading').style.display = 'block';

                try {

                    const response = await fetch(`/Users/LoadUsers?batch=${batch++}`);
                    if (response.ok) {
                        const users = await response.json();
                        if (!users || users.length <= 0) {
                             hasData = false;
                             isLoading = true;
                             return;
                        }
                        appendUsers(users);
                    }
                } catch (err) {
                    console.error('Error loading more users:', err);
                } finally {
                    isLoading = false;
                    document.getElementById('loading').style.display = 'none';
                }
            }
        });

    function toggleCheckbox(row) {
        const checkbox = row.querySelector('input[type="checkbox"]');
        checkbox.checked = !checkbox.checked;
    }

        function appendUsers(users) {
        const tableBody = document.getElementById('usersTableBody');

        users.forEach(user => {
            const row = document.createElement('tr');
            row.onclick = function() { toggleCheckbox(this); };
            const lastLoginDate = new Date(user.Lastlogin);
                row.innerHTML = `
                    <td>
                        <input type="checkbox" name="selectedUserIndexes" value="${user.id}" />
                    </td>
                    <td>
                        ${user.surname}, ${user.name}<br />
                        state: ${user.state} | role: ${user.role}
                    </td>
                    <td>
                         <a class="link-primary" href="/Account/UserProfileByUserId?userId=${user.id}">${user.email}</a>
                    </td>
                    <td class="last-login" title="${new Date(user.lastlogin).toLocaleString('ru-RU', { weekday: 'long', day: 'numeric', month: 'long', year: 'numeric', hour: '2-digit', minute: '2-digit' })}">
                        ${formatLastLogin(user.lastlogin)}
                    </td>
                `;


            tableBody.appendChild(row);
        });
    }

     function formatLastLogin(dateString) {
        const lastLoginDate = new Date(dateString);
        const totalSeconds = (new Date() - lastLoginDate) / 1000;

        const timeUnits = [
            { seconds: 31536000, name: 'year' },
            { seconds: 2592000, name: 'month' },
            { seconds: 604800, name: 'week' },
            { seconds: 86400, name: 'day' },
            { seconds: 3600, name: 'hour' },
            { seconds: 60, name: 'minute' }
        ];

        for (const unit of timeUnits) {
            if (totalSeconds >= unit.seconds) {
                const count = Math.floor(totalSeconds / unit.seconds);
                return `${count} ${count > 1 ? unit.name + 's' : unit.name} ago`;
            }
        }

        return 'less than a minute ago';
    }

</script>